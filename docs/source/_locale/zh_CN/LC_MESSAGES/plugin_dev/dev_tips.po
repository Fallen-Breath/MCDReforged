# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Fallen_Breath
# This file is distributed under the same license as the MCDReforged
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MCDReforged \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-16 14:29+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../plugin_dev/dev_tips.md:1
msgid "Some tips to plugin development"
msgstr ""

#: ../plugin_dev/dev_tips.md:3
msgid "The following tips are useful to"
msgstr ""

#: ../plugin_dev/dev_tips.md:5
msgid "Help message"
msgstr ""

#: ../plugin_dev/dev_tips.md:7
msgid ""
"Use server.register_help_message() to add some necessary tips for your "
"plugin, so the player can use !!help command to know about your plugin"
msgstr ""

#: ../plugin_dev/dev_tips.md:9
msgid ""
"Of course if your plugin is supposed to only be used by player with "
"enough permission level, specify the permission argument when registering"
msgstr ""

#: ../plugin_dev/dev_tips.md:11
msgid "Event listening"
msgstr ""

#: ../plugin_dev/dev_tips.md:13
msgid ""
"If you don't care about info from non-user source, listen to User Info "
"event instead of General Info event, which can improve MCDR's performance"
" when the server is spamming with non-user info (e.g. Pasting schematic "
"with Litematica mod) in the console"
msgstr ""

#: ../plugin_dev/dev_tips.md:15
msgid ""
"If you only care about commands from users, instead of listening to User "
"Info event, you can register a command tree to MCDR. It's much more "
"efficient than handling yourself inside User Info event"
msgstr ""

#: ../plugin_dev/dev_tips.md:17
msgid ""
"MCDR Stop event allows you to have as many time as you want to save your "
"data. Be carefully, don't enter an endless loop, MCDR is waiting for you "
"to exit"
msgstr ""

#: ../plugin_dev/dev_tips.md:19
msgid "Multi-threading"
msgstr ""

#: ../plugin_dev/dev_tips.md:21
msgid ""
"If you want to do some tasks in your plugin that might take some time to "
"finished, such as network querying or massive file operation, it's "
"recommended to execute your code into a separated thread instead of "
"directly executing them into your event listener function. Otherwise it "
"might block the pending task execution"
msgstr ""

#: ../plugin_dev/dev_tips.md:23
msgid ""
"For easier use there's a decorator named new_thread to help you make your"
" function run in another thread asynchronously"
msgstr ""

#: ../plugin_dev/dev_tips.md:25
msgid "User config, data and log files"
msgstr ""

#: ../plugin_dev/dev_tips.md:27
msgid ""
"If you want to store some user configure or user data file, it's "
"recommend to store them inside the config folder rather than store them "
"inside the plugin folder"
msgstr ""

#: ../plugin_dev/dev_tips.md:29
msgid ""
"The reason is that user might have their plugins be placed in another "
"directory or even have multiple MCDR instances to load a same plugin "
"collection directory, by a configure option named plugin_directories"
msgstr ""

#: ../plugin_dev/dev_tips.md:31
msgid ""
"If you store your configure or data inside the plugin folder, you can't "
"distinguish which MCDR instance the configuration file belongs to. You "
"can either store them inside the config folder directly or a inner folder"
" inside the config folder like config/my_plugin/, so the user data can be"
" dedicated for the MCDR instance that loads your plugin"
msgstr ""

#: ../plugin_dev/dev_tips.md:33
msgid "For logging files, store them inside logs/ folder is a good idea"
msgstr ""

#: ../plugin_dev/dev_tips.md:35
msgid "External packages"
msgstr ""

#: ../plugin_dev/dev_tips.md:37
msgid ""
"Some times you plugin needs some external resource files or requires some"
" other .py codes as libraries. For these, you can place them inside a "
"custom package in the plugin folder"
msgstr ""

#: ../plugin_dev/dev_tips.md:39
msgid ""
"For example, if the plugin folder is plugins/, then you can have the "
"following file structure:"
msgstr ""

#: ../plugin_dev/dev_tips.md:52
msgid ""
"Then your plugin MyPlugin.py can directly import your library or resource"
" files by from my_plugin import a_useful_library"
msgstr ""

#: ../plugin_dev/dev_tips.md:54
msgid ""
"Don't worry, MCDR has already appended all plugin directories into the "
"sys.path so import your package inside the plugin folder directly"
msgstr ""

#: ../plugin_dev/dev_tips.md:56
msgid "Misc"
msgstr ""

#: ../plugin_dev/dev_tips.md:58
msgid ""
"The current working directory is the folder where MCDR is in. DO NOT "
"change it since that will mess up everything"
msgstr ""

#: ../plugin_dev/dev_tips.md:59
msgid ""
"For the Info parameter in General Info event etc., don't modify it, just "
"use its public methods and read its properties"
msgstr ""

#: ../plugin_dev/dev_tips.md:60
msgid ""
"If you want to import other plugin use server.get_plugin_instance() "
"instead so the plugin instance you get is the same as the one MCDR uses"
msgstr ""

