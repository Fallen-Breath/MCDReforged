# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Fallen_Breath
# This file is distributed under the same license as the MCDReforged
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MCDReforged \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-17 13:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/plugin_dev/basic.rst:3
msgid "MCDR Plugin"
msgstr ""

#: ../../source/plugin_dev/basic.rst:6
msgid "What is a MCDR plugin"
msgstr ""

#: ../../source/plugin_dev/basic.rst:8
msgid ""
"An MCDR plugin is a python source file with ``.py`` file extension "
"located in plugin directories. The list of the plugin directory can is "
"defined inside the `configure file <configure.html#plugin_directories>`__"
msgstr ""

#: ../../source/plugin_dev/basic.rst:10
msgid ""
"At start up, MCDR will automatically load every plugin inside the plugin "
"directories. Additionally, MCDR will append all the plugin directories "
"into ``sys.path``\\ , so plugins can import modules placed inside the "
"plugin folders directly"
msgstr ""

#: ../../source/plugin_dev/basic.rst:12
msgid ""
"There is a sample plugin named ``SamplePlugin.py`` in the ``plugins/`` "
"folder in source and you can check its content for reference"
msgstr ""

#: ../../source/plugin_dev/basic.rst:15
msgid "Quick Start"
msgstr ""

#: ../../source/plugin_dev/basic.rst:17
msgid ""
"Open one of the plugin directories of MCDR, create a file named "
"``HelloWorld.py``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:24
msgid "open it and enter these code"
msgstr ""

#: ../../source/plugin_dev/basic.rst:38
msgid ""
"Return to MCDR console, enter ``!!MCDR reload plugin``\\ , and you should"
" see the hello world message from your plugin"
msgstr ""

#: ../../source/plugin_dev/basic.rst:44
msgid "Great, you have successfully created your first plugin"
msgstr ""

#: ../../source/plugin_dev/basic.rst:47
msgid "Metadata"
msgstr ""

#: ../../source/plugin_dev/basic.rst:49
msgid ""
"The meta data field provides the basic information of the plugin. As you "
"can see in the `Quick Start <#quick-start>`__ section above, meta data is"
" declared in the global scope. It's a dict contains several key-value "
"with the name ``PLUGIN_METADATA``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:51
msgid "Here's a metadata field with all possible key-values"
msgstr ""

#: ../../source/plugin_dev/basic.rst:68
msgid ""
"If a plugin doesn't not declare the meta data field, a warning will arise"
" in the console and the fallback values will be used"
msgstr ""

#: ../../source/plugin_dev/basic.rst:71
msgid "id"
msgstr ""

#: ../../source/plugin_dev/basic.rst:73
msgid ""
"Id, or plugin id, is the identity string of your plugin. It should "
"consist of lowercase letters, numbers and underscores with a length of 1 "
"to 64"
msgstr ""

#: ../../source/plugin_dev/basic.rst:75
msgid "Here's some available plugin ids:"
msgstr ""

#: ../../source/plugin_dev/basic.rst:78
msgid "``my_plugin``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:79
msgid "``anotherhelper123``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:80
msgid "``__a_cool_plugin__``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:82
msgid "But the following ids are not allowed:"
msgstr ""

#: ../../source/plugin_dev/basic.rst:85
msgid "``MyPlugin``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:86
msgid "``another-helper-123``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:87
msgid "``a cool plugin``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:89
msgid ""
"MCDR uses plugin id to distinguish between different plugins and check "
"the dependencies. All loaded plugin in MCDR contain different plugin ids."
" If a newly loaded plugin has a plugin id exactly the same with an "
"existed plugin, the new plugin will fail to load"
msgstr ""

#: ../../source/plugin_dev/basic.rst:91
msgid ""
"Choose your plugin id wisely. It's highly suggested to keep your plugin "
"id not changed after release your plugin"
msgstr ""

#: ../../source/plugin_dev/basic.rst:94
msgid "Field key: ``id``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:95 ../../source/plugin_dev/basic.rst:116
#: ../../source/plugin_dev/basic.rst:164
msgid "Value type: str"
msgstr ""

#: ../../source/plugin_dev/basic.rst:96
msgid "Fallback value: the file name without the ``.py`` extension"
msgstr ""

#: ../../source/plugin_dev/basic.rst:99
msgid "version"
msgstr ""

#: ../../source/plugin_dev/basic.rst:101
msgid ""
"The version value indicates the version of your value. It's mostly in "
"`semver <https://semver.org/>`__ format but it has less restriction such "
"as you can have the core version with any length"
msgstr ""

#: ../../source/plugin_dev/basic.rst:103
msgid "Here's some available version:"
msgstr ""

#: ../../source/plugin_dev/basic.rst:106
msgid "``1.0.0``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:107
msgid "``2.0``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:108
msgid "``1.2.3-pre4``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:109
msgid "``1.8.9-rc.8``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:110
msgid "``1.14.1-beta.4+build.54``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:112
msgid ""
"Following `semver <https://semver.org/>`__ format for you version string "
"is a good idea. It's easier to maintain and for people to understand"
msgstr ""

#: ../../source/plugin_dev/basic.rst:115
msgid "Field key: ``version``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:117
msgid "Fallback value: ``0.0.0``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:120
msgid "name"
msgstr ""

#: ../../source/plugin_dev/basic.rst:122
msgid ""
"The name of your plugin. Give your plugin with a nice name with any kinds"
" of characters. RText is allowed here"
msgstr ""

#: ../../source/plugin_dev/basic.rst:124
msgid ""
"Try not to make the name too long. For more details of your plugin, you "
"can put them into the ``description``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:127
msgid "Field key: ``name``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:128 ../../source/plugin_dev/basic.rst:140
msgid "Value type: str or RTextBase"
msgstr ""

#: ../../source/plugin_dev/basic.rst:129
msgid "Fallback value: The plugin id"
msgstr ""

#: ../../source/plugin_dev/basic.rst:132
msgid "description"
msgstr ""

#: ../../source/plugin_dev/basic.rst:134
msgid ""
"The description of you plugin. Put the details of your plugin here. Rtext"
" is allowed too"
msgstr ""

#: ../../source/plugin_dev/basic.rst:136 ../../source/plugin_dev/basic.rst:148
#: ../../source/plugin_dev/basic.rst:160
msgid "This field is optional, you can just ignore it if you are lazy"
msgstr ""

#: ../../source/plugin_dev/basic.rst:139
msgid "Field key: ``description``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:141 ../../source/plugin_dev/basic.rst:153
#: ../../source/plugin_dev/basic.rst:165 ../../source/plugin_dev/basic.rst:250
msgid "Fallback value: None"
msgstr ""

#: ../../source/plugin_dev/basic.rst:144
msgid "author"
msgstr ""

#: ../../source/plugin_dev/basic.rst:146
msgid ""
"The authors of the plugins. If there's only a single author, you can also"
" use a string instead of a list of string"
msgstr ""

#: ../../source/plugin_dev/basic.rst:151
msgid "Field key: ``author``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:152
msgid "Value type: str or List[str]"
msgstr ""

#: ../../source/plugin_dev/basic.rst:156
msgid "link"
msgstr ""

#: ../../source/plugin_dev/basic.rst:158
msgid ""
"The link of your project. You can put a link to the github repository of "
"your plugin here. It should be an available url"
msgstr ""

#: ../../source/plugin_dev/basic.rst:163
msgid "Field key: ``link``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:168
msgid "dependencies"
msgstr ""

#: ../../source/plugin_dev/basic.rst:170
msgid ""
"A dict of dependencies you plugin relies on. It's a dict contains several"
" key-value pairs. The key is the id of the plugin that your plugin is "
"relies on, and the value is the version requirement of the plugin that "
"your plugin is relies on"
msgstr ""

#: ../../source/plugin_dev/basic.rst:172
msgid ""
"If your plugin has requirement to the version of MCDR, use "
"``mcdreforged`` as the plugin id"
msgstr ""

#: ../../source/plugin_dev/basic.rst:174
msgid ""
"A version requirement is a string than contains several criterions of the"
" version. Criterions are divided by space character, each criterion is "
"made up of an operator and a base version string. Wildcard is allowed "
"when describing the base version"
msgstr ""

#: ../../source/plugin_dev/basic.rst:176
msgid "List of the operators:"
msgstr ""

#: ../../source/plugin_dev/basic.rst:181
msgid "Operator"
msgstr ""

#: ../../source/plugin_dev/basic.rst:182
msgid "Example"
msgstr ""

#: ../../source/plugin_dev/basic.rst:183
msgid "Explanation for the example"
msgstr ""

#: ../../source/plugin_dev/basic.rst:184
msgid "Accepted"
msgstr ""

#: ../../source/plugin_dev/basic.rst:185
msgid "Unaccepted"
msgstr ""

#: ../../source/plugin_dev/basic.rst:186
msgid ">="
msgstr ""

#: ../../source/plugin_dev/basic.rst:187
msgid ">=1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:188
msgid "The target version should be equal to or newer than 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:189
msgid "1.2.3, 1.3.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:190
msgid "1.2.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:191
msgid ">"
msgstr ""

#: ../../source/plugin_dev/basic.rst:192
msgid ">1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:193
msgid "The target version should be newer than 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:194
msgid "1.2.4, 1.3.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:195
msgid "1.2.0, 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:196
msgid "<="
msgstr ""

#: ../../source/plugin_dev/basic.rst:197
msgid "<=1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:198
msgid "The target version should be equal to or older than 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:199
msgid "1.2.3, 1.1.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:200
msgid "1.2.4, 2.0.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:201
msgid "<"
msgstr ""

#: ../../source/plugin_dev/basic.rst:202
msgid "<1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:203
msgid "The target version should be older than 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:204
msgid "1.1.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:205
msgid "1.2.3, 1.5"
msgstr ""

#: ../../source/plugin_dev/basic.rst:206
msgid "="
msgstr ""

#: ../../source/plugin_dev/basic.rst:207
msgid "=1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:208
msgid "The target version should equal to 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:209 ../../source/plugin_dev/basic.rst:212
#: ../../source/plugin_dev/basic.rst:214
msgid "1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:210 ../../source/plugin_dev/basic.rst:215
msgid "1.2, 1.2.4"
msgstr ""

#: ../../source/plugin_dev/basic.rst:213
msgid ""
"If the operator is not specified, ``=`` is used as default. In this case "
"the target version should equal to 1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:216
msgid "^"
msgstr ""

#: ../../source/plugin_dev/basic.rst:217
msgid "^1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:218
msgid ""
"The target version should be equal to or newer than 1.2.3, and the first "
"version segment of the target version should be equal to the base version"
msgstr ""

#: ../../source/plugin_dev/basic.rst:219
msgid "1.2.3, 1.2.4, 1.4.4"
msgstr ""

#: ../../source/plugin_dev/basic.rst:220
msgid "1.0.0, 2.0.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:221
msgid "~"
msgstr ""

#: ../../source/plugin_dev/basic.rst:222
msgid "~1.2.3"
msgstr ""

#: ../../source/plugin_dev/basic.rst:223
msgid ""
"The target version should be equal to or newer than 1.2.3, and the first "
"and the second version segment of the target version should be equal to "
"the base version"
msgstr ""

#: ../../source/plugin_dev/basic.rst:224
msgid "1.2.3, 1.2.4"
msgstr ""

#: ../../source/plugin_dev/basic.rst:225
msgid "1.0.0, 1.4.4, 2.0.0"
msgstr ""

#: ../../source/plugin_dev/basic.rst:228
msgid ""
"Check `here <https://docs.npmjs.com/about-semantic-versioning>`__ for "
"more detail to the version requirement"
msgstr ""

#: ../../source/plugin_dev/basic.rst:230
msgid ""
"If there are multiple declared criterions, the target version is accepted"
" only when it's accepted by all criterions"
msgstr ""

#: ../../source/plugin_dev/basic.rst:232
msgid "Here a dependencies example:"
msgstr ""

#: ../../source/plugin_dev/basic.rst:243
msgid ""
"MCDR will make sure only when all dependency requirements are satisfied "
"your plugin will get loaded successfully. Missing dependency, dependency "
"version not match or dependency loop will result in a dependency check "
"failure"
msgstr ""

#: ../../source/plugin_dev/basic.rst:245
msgid ""
"This field is optional, you can just ignore it if your plugin doesn't "
"have any dependency"
msgstr ""

#: ../../source/plugin_dev/basic.rst:248
msgid "Field key: ``dependencies``"
msgstr ""

#: ../../source/plugin_dev/basic.rst:249
msgid "Value type: Dict[str, str]"
msgstr ""

#: ../../source/plugin_dev/basic.rst:253
msgid "Plugin Registry"
msgstr ""

#: ../../source/plugin_dev/basic.rst:255
msgid ""
"Plugin registry is a collection of things that plugin registered for. It "
"will get cleaned up every time before the plugin gets loaded, so you'd "
"better register them in `Plugin Load <event.html#plugin-load>`__ event"
msgstr ""

#: ../../source/plugin_dev/basic.rst:258
msgid "Event listeners"
msgstr ""

#: ../../source/plugin_dev/basic.rst:260
msgid "There are 2 methods to register an event listener for you plugin"
msgstr ""

#: ../../source/plugin_dev/basic.rst:264
msgid ""
"Declare a function inside the global slope with the specific name. It's "
"the legacy registering method to register a listener and it only works "
"with events provided by MCDR. Check `here <event.html#default-event-"
"listener>`__ for more detail"
msgstr ""

#: ../../source/plugin_dev/basic.rst:266
msgid ""
"For example, the widely-used function below is a default `Plugin Loaded "
"<event.html#plugin-loaded>`__ event listener"
msgstr ""

#: ../../source/plugin_dev/basic.rst:274
msgid ""
"Manually invoke ``server.register_event_listener`` method to register an "
"event listener. You can specify the callable object and the priority for "
"the event listener"
msgstr ""

#: ../../source/plugin_dev/basic.rst:276
msgid ""
"Check `here <event.html#register-a-event-listener>`__ for more detail "
"about event listener registering"
msgstr ""

#: ../../source/plugin_dev/basic.rst:278
msgid "Here some examples about manually register event listeners"
msgstr ""

#: ../../source/plugin_dev/basic.rst:292
msgid ""
"Take a look at the reference of ``register_event_listener`` method in "
"`ServerInterface <classes/ServerInterface.html#register-event-"
"listener>`__ document for more detail"
msgstr ""

#: ../../source/plugin_dev/basic.rst:295
msgid "Command"
msgstr ""

#: ../../source/plugin_dev/basic.rst:297
msgid ""
"Rather than manually parsing ``info.content`` inside user info event "
"callback like ``on_user_info``\\ , MCDR provides a command system for "
"plugins to register their commands"
msgstr ""

#: ../../source/plugin_dev/basic.rst:299
msgid ""
"Check the `command <command>`__ document for more detail about building a"
" command tree"
msgstr ""

#: ../../source/plugin_dev/basic.rst:301
msgid ""
"Assuming that you have already built a command tree with root literal "
"node *root*\\ , then you can use the following command to register your "
"command tree in MCDR"
msgstr ""

#: ../../source/plugin_dev/basic.rst:307
msgid ""
"Take a look at the reference of ``register_command`` method in "
"`ServerInterface <classes/ServerInterface.html#register-command>`__ "
"document for more details of its usage"
msgstr ""

#: ../../source/plugin_dev/basic.rst:310
msgid "Help message"
msgstr ""

#: ../../source/plugin_dev/basic.rst:312
msgid ""
"Plugin can register its help message with "
"``server.register_help_message`` to MCDR, so that users can use `\\ "
"``!!help`` command <../command.html#help-command>`__ to view the help "
"messages of all commands"
msgstr ""

#: ../../source/plugin_dev/basic.rst:314
msgid ""
"Take a look at the reference of ``register_help_message`` method in "
"`ServerInterface <classes/ServerInterface.html#register-help-message>`__ "
"document for more details of its usage"
msgstr ""

#~ msgid ""
#~ "An MCDR plugin is a python source"
#~ " file with .py file extension located"
#~ " in plugin directories. The list of"
#~ " the plugin directory can is defined"
#~ " inside the configure file"
#~ msgstr ""

#~ msgid ""
#~ "At start up, MCDR will automatically "
#~ "load every plugin inside the plugin "
#~ "directories. Additionally, MCDR will append"
#~ " all the plugin directories into "
#~ "sys.path, so plugins can import modules"
#~ " placed inside the plugin folders "
#~ "directly"
#~ msgstr ""

#~ msgid ""
#~ "There is a sample plugin named "
#~ "SamplePlugin.py in the plugins/ folder "
#~ "in source and you can check its"
#~ " content for reference"
#~ msgstr ""

#~ msgid ""
#~ "Open one of the plugin directories "
#~ "of MCDR, create a file named "
#~ "HelloWorld.py"
#~ msgstr ""

#~ msgid ""
#~ "Return to MCDR console, enter !!MCDR "
#~ "reload plugin, and you should see "
#~ "the hello world message from your "
#~ "plugin"
#~ msgstr ""

#~ msgid ""
#~ "The meta data field provides the "
#~ "basic information of the plugin. As "
#~ "you can see in the Quick Start "
#~ "section above, meta data is declared "
#~ "in the global scope. It's a dict"
#~ " contains several key-value with the"
#~ " name PLUGIN_METADATA"
#~ msgstr ""

#~ msgid "my_plugin"
#~ msgstr ""

#~ msgid "anotherhelper123"
#~ msgstr ""

#~ msgid "__a_cool_plugin__"
#~ msgstr ""

#~ msgid "MyPlugin"
#~ msgstr ""

#~ msgid "another-helper-123"
#~ msgstr ""

#~ msgid "a cool plugin"
#~ msgstr ""

#~ msgid "Field key: id"
#~ msgstr ""

#~ msgid "Fallback value: the file name without the .py extension"
#~ msgstr ""

#~ msgid ""
#~ "The version value indicates the version"
#~ " of your value. It's mostly in "
#~ "semver format but it has less "
#~ "restriction such as you can have "
#~ "the core version with any length"
#~ msgstr ""

#~ msgid "1.0.0"
#~ msgstr ""

#~ msgid "2.0"
#~ msgstr ""

#~ msgid "1.2.3-pre4"
#~ msgstr ""

#~ msgid "1.8.9-rc.8"
#~ msgstr ""

#~ msgid "1.14.1-beta.4+build.54"
#~ msgstr ""

#~ msgid ""
#~ "Following semver format for you version"
#~ " string is a good idea. It's "
#~ "easier to maintain and for people "
#~ "to understand"
#~ msgstr ""

#~ msgid "Field key: version"
#~ msgstr ""

#~ msgid "Fallback value: 0.0.0"
#~ msgstr ""

#~ msgid ""
#~ "Try not to make the name too "
#~ "long. For more details of your "
#~ "plugin, you can put them into the"
#~ " description"
#~ msgstr ""

#~ msgid "Field key: name"
#~ msgstr ""

#~ msgid "Field key: description"
#~ msgstr ""

#~ msgid "Field key: author"
#~ msgstr ""

#~ msgid "Field key: link"
#~ msgstr ""

#~ msgid ""
#~ "If your plugin has requirement to "
#~ "the version of MCDR, use mcdreforged "
#~ "as the plugin id"
#~ msgstr ""

#~ msgid "Check here for more detail to the version requirement"
#~ msgstr ""

#~ msgid "Field key: dependencies"
#~ msgstr ""

#~ msgid ""
#~ "Plugin registry is a collection of "
#~ "things that plugin registered for. It"
#~ " will get cleaned up every time "
#~ "before the plugin gets loaded, so "
#~ "you'd better register them in Plugin "
#~ "Load event"
#~ msgstr ""

#~ msgid ""
#~ "Declare a function inside the global "
#~ "slope with the specific name. It's "
#~ "the legacy registering method to "
#~ "register a listener and it only "
#~ "works with events provided by MCDR. "
#~ "Check here for more detail"
#~ msgstr ""

#~ msgid ""
#~ "For example, the widely-used function"
#~ " below is a default Plugin Loaded "
#~ "event listener"
#~ msgstr ""

#~ msgid ""
#~ "Manually invoke server.register_event_listener "
#~ "method to register an event listener."
#~ " You can specify the callable object"
#~ " and the priority for the event "
#~ "listener"
#~ msgstr ""

#~ msgid "Check here for more detail about event listener registering"
#~ msgstr ""

#~ msgid ""
#~ "Take a look at the reference of"
#~ " register_event_listener method in "
#~ "ServerInterface document for more detail"
#~ msgstr ""

#~ msgid ""
#~ "Rather than manually parsing info.content "
#~ "inside user info event callback like "
#~ "on_user_info, MCDR provides a command "
#~ "system for plugins to register their "
#~ "commands"
#~ msgstr ""

#~ msgid ""
#~ "Check the command document for more "
#~ "detail about building a command tree"
#~ msgstr ""

#~ msgid ""
#~ "Assuming that you have already built "
#~ "a command tree with root literal "
#~ "node root, then you can use the"
#~ " following command to register your "
#~ "command tree in MCDR"
#~ msgstr ""

#~ msgid ""
#~ "Take a look at the reference of"
#~ " register_command method in ServerInterface "
#~ "document for more details of its "
#~ "usage"
#~ msgstr ""

#~ msgid ""
#~ "Plugin can register its help message "
#~ "with server.register_help_message to MCDR, so"
#~ " that users can use !!help command"
#~ " to view the help messages of "
#~ "all commands"
#~ msgstr ""

#~ msgid ""
#~ "Take a look at the reference of"
#~ " register_help_message method in ServerInterface"
#~ " document for more details of its "
#~ "usage"
#~ msgstr ""

