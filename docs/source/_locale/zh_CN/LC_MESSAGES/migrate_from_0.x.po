# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Fallen_Breath
# This file is distributed under the same license as the MCDReforged
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MCDReforged \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-15 15:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Alex3236 <alex3236@qq.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../migrate_from_0.x.md:1
msgid "Migrate from MCDR 0.x"
msgstr "从 MCDR 0.x 迁移"

#: ../migrate_from_0.x.md:3
msgid "File structure"
msgstr "文件结构"

#: ../migrate_from_0.x.md:5
msgid ""
"Since MCDR now is installed as a python package, unless you run MCDR with"
" source, file / folders below can be removed"
msgstr "由于 MCDR 现在作为 Python 包安装，除非您使用源码运行MCDR，否则下面的文件/文件夹可直接删除："

#: ../migrate_from_0.x.md:7
msgid "utils/"
msgstr ""

#: ../migrate_from_0.x.md:8
msgid "resources/"
msgstr ""

#: ../migrate_from_0.x.md:9
msgid "requirements.txt"
msgstr ""

#: ../migrate_from_0.x.md:10
msgid "LICENSE"
msgstr ""

#: ../migrate_from_0.x.md:11
msgid "readme.md"
msgstr ""

#: ../migrate_from_0.x.md:12
msgid "readme_cn.md"
msgstr ""

#: ../migrate_from_0.x.md:13
msgid ""
"MCDReforged.py (If you still want to use it you can grab it from github "
"release, it's just an entry script)"
msgstr "MCDReforged.py (如果您仍想要使用它，可从Github realease 抓取——现在它只作为MCDR的启动脚本。)"

#: ../migrate_from_0.x.md:15
msgid "The logging folder is renamed from log/ to logs/"
msgstr "日志记录文件夹从 `log/` 重命名为 `logs/`"

#: ../migrate_from_0.x.md:17
msgid "Config"
msgstr "配置文件"

#: ../migrate_from_0.x.md:19
msgid ""
"There come quite a lot of changes to the config file. Although MCDR will "
"still work if you keep the old config file, it's highly recommend to make"
" a new default configure file, and fill your old configures into the new "
"configure file"
msgstr ""
"配置文件格式进行了大量更改。"
"虽然如果您保留旧配置文件，MCDR将依然可以仍然工作，"
"但我们强烈建议您生成新的默认配置文件，并将旧配置填充到新的配置文件中。"

#: ../migrate_from_0.x.md:21
msgid ""
"You can rename the old config.yml to a temporary name like "
"old_config.yml, then start MCDR. MCDR will generate a new default "
"configure file and exit. Then open these 2 configure file and migrate"
msgstr ""
"你可以重命名旧的 `config.yml` 为 `old_config.yml`"
"并启动 MCDR。 MCDR 将重新生成一份配置文件并自动退出。"
"在这之后，你可以打开这两个配置文件并进行配置迁移。"

#: ../migrate_from_0.x.md:23
msgid "Permission"
msgstr "权限"

#: ../migrate_from_0.x.md:25
msgid ""
"There's no change to the permission system and the permission file, so "
"you can just use the old permission file"
msgstr "权限系统毫无改变。你可以使用旧的权限配置文件，无需更改。"

#: ../migrate_from_0.x.md:27
msgid "Plugins"
msgstr "插件"

#: ../migrate_from_0.x.md:29
msgid ""
"Most of the MCDR 0.x plugins only need to have some small changes to be "
"adjusted to current MCDR. Some of them can even directly work with "
"current MCDR without any change"
msgstr ""
"大部分旧的 MCDR 插件只需做出一些小小的改动以适配新版 MCDR。"
"甚至，相当一部分旧插件可以毫无更改的运行在新的 MCDR 中。"

#: ../migrate_from_0.x.md:31
msgid "Metadata"
msgstr "元数据"

#: ../migrate_from_0.x.md:33
msgid ""
"Metadata is a global field inside the plugin file. It's used to store "
"basic information and dependencies of a plugin. It's necessary for a "
"plugin to declare it so MCDR can handle all the plugins correctly"
msgstr ""
"元数据在插件中作为一个全局变量。它的作用是描述插件的基本信息和依赖关系。"
"您需要在插件中声明元数据，以使 MCDR 正确处理所有的插件。"

#: ../migrate_from_0.x.md:35
msgid ""
"A legacy plugin is still able to be loaded if it doesn't have the "
"metadata field, but a warning will be shown in the console"
msgstr "没有声明元数据的旧插件仍然可以被 MCDR 加载，但控制台中将输出一个警告信息。"

#: ../migrate_from_0.x.md:37
msgid "Check here for more information about plugin metadata"
msgstr ""
"[点击此处](plugin_dev/basic.html#metadata)"
"查看更多插件元数据的相关信息。"

#: ../migrate_from_0.x.md:39
msgid "Listener"
msgstr "响应器"

#: ../migrate_from_0.x.md:41
msgid "Compatibility"
msgstr "兼容性"

#: ../migrate_from_0.x.md:43
msgid ""
"Current MCDR implements a better event & listener system, plugin can "
"register any callback as event listener to any event."
msgstr ""
"新版的 MCDR 实现了更好的事件和响应器系统，插件可以"
"将任意函数作为事件响应器注册。"

#: ../migrate_from_0.x.md:45
msgid ""
"Most of the MCDR 0.x style event listeners are reserved and now work as "
"an automatically registered default listener for the related event"
msgstr ""
"大多数 MCDR 0.x 样式的事件响应器都被保留，"
"现在作为相关事件自动注册的默认响应器工作。"

#: ../migrate_from_0.x.md:47
msgid "on_info"
msgstr ""

#: ../migrate_from_0.x.md:48
msgid "on_user_info"
msgstr ""

#: ../migrate_from_0.x.md:49
msgid "on_server_startup"
msgstr ""

#: ../migrate_from_0.x.md:50
msgid "on_server_stop"
msgstr ""

#: ../migrate_from_0.x.md:51
msgid "on_mcdr_stop"
msgstr ""

#: ../migrate_from_0.x.md:52
msgid "on_player_joined"
msgstr ""

#: ../migrate_from_0.x.md:53
msgid "on_player_left"
msgstr ""

#: ../migrate_from_0.x.md:55
msgid ""
"If you declare a function with name above, MCDR will automatically detect"
" it and register it as an event listener when your plugin gets loaded. "
"The listener priority is the default value 1000"
msgstr ""
"如果你定义了一个在以上列表中的函数，"
"则 MCDR 将在插件加载时自动把它们注册为一个事件响应器。"
"响应器的默认优先级是`1000`。"

#: ../migrate_from_0.x.md:57
msgid "These 2 events are removed from MCDR"
msgstr "以下两个事件已从 MCDR 中移除："

#: ../migrate_from_0.x.md:59
msgid "on_death_message"
msgstr ""

#: ../migrate_from_0.x.md:60
msgid "on_player_made_advancement"
msgstr ""

#: ../migrate_from_0.x.md:62
msgid ""
"If your plugin relies on these 2 events, there is an alternative for it: "
"coming-soon"
msgstr "如果你的插件依赖于这两个事件， 有一个替代方案：[咕咕咕](#TODO)"

#: ../migrate_from_0.x.md:64
msgid "Listener arguments"
msgstr "响应器参数"

#: ../migrate_from_0.x.md:66
msgid ""
"In MCDR 0.x the player joined event listener accepts 2 or 3 arguments. "
"Both of these 2 definitions below work"
msgstr ""
"在 MCDR 0.x 中，玩家加入的事件相应器接受 2 或 3 个参数。"
"以下的两个定义方式都有效："

#: ../migrate_from_0.x.md:78
msgid ""
"However, the former usage is removed in current MCDR version, only the "
"latter one with 3 arguments is accepted"
msgstr ""
"然而，在当前版本的 MCDR 中，前者将不被接受，"
"即只有定义 3 个参数的后者可被使用。"

#: ../migrate_from_0.x.md:80
msgid ""
"Beside the player joined event listener, other event listener callbacks "
"have their argument list unchanged"
msgstr "除了玩家加入的事件响应器外，其他事件响应器的回调参数保持不变。"

#: ../migrate_from_0.x.md:82
msgid "Multi-threading"
msgstr "多线程"

#: ../migrate_from_0.x.md:84
msgid ""
"MCDR 0.x allocates separate threads for plugins to execute their event "
"listener callbacks. This lazyness brings unpredictable plugin execution "
"order and affects overall performance by a lot. Multithreading also make "
"it hard to do something after all plugins have finished their callbacks"
msgstr ""
"MCDR 0.x 为每个插件分配单独的线程以执行其事件响应器回调。"
"这种 lazy 的做法带来了不可预知的插件执行顺序，"
"并极大影响了整体性能。这样的多线程也使得"
"在所有插件完成回调后很难执行任何工作。"

#: ../migrate_from_0.x.md:86
msgid ""
"In current MCDR, all event listeners callbacks are invoked in a single "
"thread named TaskExecutor to solve the issues above"
msgstr ""
"在新版 MCDR 中，所有事件响应器回调在名为 `TaskExcutor` 的单线程中调用，以解决上述问题。"

#: ../migrate_from_0.x.md:88
msgid ""
"If your plugin depends on multithreading from MCDR to do some parallel "
"operations, or your plugin need to do some I/O or network operations "
"which might take some times, you'd better create a new thread to execute "
"them manually, so MCDR won't be blocked by these"
msgstr ""
"如果您的插件依赖于来自 MCDR 的多线程以执行一些并行操作，"
"或您的插件需要执行一些 I/O 或网络操作，并需要耗费一些时间，"
"则最好创建一个新线程手动执行它们，以保证 MCDR 不会被这些操作阻塞。"

#: ../migrate_from_0.x.md:90
msgid ""
"MCDR also provides a simple function decorator new_thread for lazy man, "
"to make a function multi threaded when being invoked. Here's an quick "
"example:"
msgstr ""
"MCDR 还为 lasyman 提供了 `new_thread` 函数修饰器，"
"使函数在调用时具有多线程。下面是一个简单的示例："

#: ../migrate_from_0.x.md:108
msgid ""
"With the @new_thread decorator, everytime when you invoke "
"my_slow_method2, a new daemon thread will be started to executed it. For "
"more details about the @new_thread decorator, check here"
msgstr ""
"使用 `@new_thread` 修饰器，"
"则每次调用`my_slow_method2`时，都会启动一个新的守护线程来执行它。"
"更多有关 `@new_thread` 的详细信息，"
"请查看[此处](plugin_dev/api.html#new-thread)。"

#: ../migrate_from_0.x.md:110
msgid "Package location"
msgstr "模块位置"

#: ../migrate_from_0.x.md:112
msgid ""
"If your plugin imports some of the mcdr utils, like RText or Rcon, you "
"need to take a look at the package location"
msgstr "如果您的插件需要导入一些 MCDR 内置模块，如 RText 或 Rcon，请留意包的位置。"

#: ../migrate_from_0.x.md:114
msgid ""
"Current MCDR collects all useful classes / functions in the "
"mcdreforged.api package. It's recommended to import the package you want "
"in this api package"
msgstr ""
"MCDR 集合了所有有用的类/函数至 `mcdreforged.api` 包中。建议从 `api` 包中引用所需的模块。"

#: ../migrate_from_0.x.md:116
msgid ""
"Use from mcdreforged.api.rtext import * if you want to use all rtext "
"classes"
msgstr "如需引用所有 rtext 类，可使用 `from mcdreforged.api.rtext import *` 。"

#: ../migrate_from_0.x.md:118
msgid ""
"Use from mcdreforged.api.rcon import * if you want to use all rcon "
"classes. Class Rcon is renamed to RconConnection by the way"
msgstr ""
"如需引用所有 rcon 类，可使用 `from mcdreforged.api.rcon import *` 。"
"顺带一提，`Rcon` 类已被重命名为 `RconConnection` 。"

#: ../migrate_from_0.x.md:120
msgid ""
"For lazy man, you can safely use from mcdreforged.api.all import * to "
"import all useful things to the plugin"
msgstr "对于 lazyman，你可以安全地使用 `from mcdreforged.api.all import *` 向插件中引用一切内置模块。"

#: ../migrate_from_0.x.md:122
msgid "Server Instance API"
msgstr "服务器实例 API"

#: ../migrate_from_0.x.md:124
msgid ""
"Method reply now raises a TypeError if the given info parameter is not "
"from a user"
msgstr "如果给定的 *info* 参数并非来自用户，则 `reply` 方法将释放一个 `TypeError` 。"

#: ../migrate_from_0.x.md:126
msgid "Method add_help_message is renamed to register_help_message"
msgstr "`add_help_message` 方法现已重命名为 `register_help_message` 。"

#: ../migrate_from_0.x.md:128
msgid "Others"
msgstr "其它"

#: ../migrate_from_0.x.md:130
msgid "console_command_prefix"
msgstr ""

#: ../migrate_from_0.x.md:132
msgid ""
"The option console_command_prefix is removed, which was used to prevent "
"input starts with !! to be sent to the standard input stream of the "
"server by default"
msgstr ""
"`console_command_prefix` 已被移除——它曾用以防止将 `!!` 开头的控制台输入被发送至服务器标准输入流。"

#: ../migrate_from_0.x.md:134
msgid ""
"In current version, MCDR will not prevent that kind of console input to "
"be sent to the server unless it matches an registered command tree root "
"node. See how the current command system works here"
msgstr ""
"在当前版本中，MCDR 不会阻止将此类控制台输入发送到服务器，"
"除非它与已注册命令树的根节点匹配。"
"[点击此处](plugin_dev/command.html#workflow) 了解此命令系统的工作原理。"

#: ../migrate_from_0.x.md:136
msgid ""
"As a result, if you plugin use manually parsing method to parse command "
"to parse a user command in on_user_info etc., you need to invoke "
"info.cancel_send_to_server() in your command processing, otherwise if the"
" command you enter on console might be sent to the server standard input "
"stream"
msgstr ""
"因此，如果插件使用手动解析方法分析 `on_user_info` 等中"
"的用户命令，则需要在命令处理中调用 `info.cancel_send_to_server()` 方法，"
"否则在控制台中输入的命令可能会被发送到服务器标准输入流。"

